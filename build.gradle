buildscript {
  repositories {
    maven { url = 'https://maven.minecraftforge.net' }
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
  }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = 'dev-20200614'
group = 'me.whizvox.compoundores'
archivesBaseName = 'CompoundOres'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

//println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
  // official Mojang-provided mappings
  mappings channel: 'official', version: '1.16.5'
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        compoundores {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        compoundores {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      args '--mod', 'compoundores', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
      mods {
        compoundores {
          source sourceSets.main
        }
      }
    }
  }
}

sourceSets.main.resources {
  srcDir 'src/generated/resources'
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.16.5-36.1.25'
}

jar {
  manifest {
    attributes([
        "Specification-Title": "Compound Ores",
        "Specification-Vendor": "whizvox",
        "Specification-Version": "1", // We are version 1 of ourselves
        "Implementation-Title": project.name,
        "Implementation-Version": "${project.version}",
        "Implementation-Vendor" :"whizvox",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

jar.finalizedBy('reobfJar')

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact jar
    }
  }
  repositories {
    maven {
      url "file:///${project.projectDir}/mcmodsrepo"
    }
  }
}
