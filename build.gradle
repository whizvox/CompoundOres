buildscript {
  repositories {
    maven { url = 'https://maven.minecraftforge.net' }
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
  }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
  maven {
    url 'https://modmaven.dev/'
  }
  maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl"
  }
  maven {
    name 'DVS1 Maven FS'
    url 'http://dvs1.progwml6.com/files/maven'
  }
  maven {
    name 'CurseMaven'
    url "https://www.cursemaven.com"
    content {
      includeGroup "curse.maven"
    }
  }
  maven {
    url 'https://maven.blamejared.com'
  }
}

version = 'dev-20200707'
group = 'me.whizvox.compoundores'
archivesBaseName = 'CompoundOres'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
  // official Mojang-provided mappings
  mappings channel: 'official', version: '1.16.5'
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        compoundores {
          source sourceSets.main
        }
      }
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }

    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        compoundores {
          source sourceSets.main
        }
      }
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }

    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      args '--mod', 'compoundores', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
      mods {
        compoundores {
          source sourceSets.main
        }
      }
      property 'mixin.env.remapRefMap', 'true'
      property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
    }
  }
}

sourceSets.main.resources {
  srcDir 'src/generated/resources'
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.16.5-36.1.25'

  // if you want to test with other mods, put them as runtimeOnly dependencies here
  // examples:
  //runtimeOnly fg.deobf('mezz.jei:jei-1.16.5:7.6.1.75')
  //runtimeOnly fg.deobf('mekanism:Mekanism:1.16.5-10.0.21.448')
  //runtimeOnly fg.deobf('mekanism:Mekanism:1.16.5-10.0.21.448:generators')
  //runtimeOnly fg.deobf("slimeknights.mantle:Mantle:1.16.5-1.6.110")
  //runtimeOnly fg.deobf("slimeknights.tconstruct:TConstruct:1.16.5-3.0.4.215")
  //runtimeOnly fg.deobf('vazkii.quark:Quark:r2.4-315.1869')
  //runtimeOnly fg.deobf('vazkii.autoreglib:AutoRegLib:1.6-50.92')

  // most mods are not explicitly uploaded to a Maven repo, but pretty much all of them are uploaded to CurseForge
  // format: `curse.maven:<mod name>-<mod id>:<file id>` (mod name doesn't do anything, just for human identification)
  //runtimeOnly fg.deobf('curse.maven:rftoolsbase-326041:3206945')
  //runtimeOnly fg.deobf('curse.maven:mcjtylib-233105:3236516')
  //runtimeOnly fg.deobf('curse.maven:cofhworld-69162:3249453')
  //runtimeOnly fg.deobf('curse.maven:thermalfounation-222880:3248150')
  //runtimeOnly fg.deobf('curse.maven:lolipop-347954:3232534')
  //runtimeOnly fg.deobf('curse.maven:powah-352656:3232535')
}

jar {
  manifest {
    attributes([
        "Specification-Title": "Compound Ores",
        "Specification-Vendor": "whizvox",
        "Specification-Version": "1", // We are version 1 of ourselves
        "Implementation-Title": project.name,
        "Implementation-Version": "${project.version}",
        "Implementation-Vendor" :"whizvox",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

jar.finalizedBy('reobfJar')

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact jar
    }
  }
  repositories {
    maven {
      url "file:///${project.projectDir}/mcmodsrepo"
    }
  }
}
